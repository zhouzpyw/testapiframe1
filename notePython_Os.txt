
Python os模块教程_Python os文件|目录操作库函数API方法大全
一、Python os模块简介
Python 的 os 模块是一个用于操作文件系统的常用模块，可以让 Python 程序执行文件操作、目录操作等。下面是 os 模块的简介和常用 API 列表：

os.getcwd()：返回当前工作目录的路径。
os.chdir(path)：将当前工作目录更改为指定路径。
os.listdir(path=".")：返回指定目录中所有文件和目录的列表。
os.mkdir(path, mode=0o777)：创建一个新目录。
os.makedirs(path, mode=0o777)：递归创建一个新目录和其所有子目录。
os.remove(path)：删除指定文件。
os.rmdir(path)：删除指定目录。
os.removedirs(path)：递归删除指定目录及其所有子目录。
os.rename(src, dst)：将文件或目录从 src 更名为 dst。
os.path.abspath(path)：返回指定路径的绝对路径。
os.path.join(path1, path2, ...)：将多个路径组合成一个路径。
os.path.splitext(path)：分离文件名和扩展名，返回一个元组。
os.path.exists(path)：判断指定路径是否存在。
os.path.isdir(path)：判断指定路径是否为目录。
os.path.isfile(path)：判断指定路径是否为文件。
以上是 os 模块的常用 API 列表，还有很多其他的函数和方法，可以根据需要选择使用。

二、Python os模块应用
Python 的 os 模块是一个用于操作文件系统的常用模块，可以让 Python 程序执行文件操作、目录操作等。下面是 os 模块的常见应用场景：

文件和目录操作：os 模块提供了创建、删除、更名、判断文件是否存在等函数，可以用于文件和目录的操作，例如创建、删除、复制、移动文件或目录。
环境变量操作：os 模块提供了获取、设置、删除环境变量的函数，可以用于管理操作系统的环境变量。
进程和进程组操作：os 模块提供了创建子进程、获取进程 ID、获取当前进程信息等函数，可以用于管理进程和进程组。
权限和时间戳操作：os 模块提供了获取和设置文件或目录的权限和时间戳的函数，可以用于管理文件或目录的属性。
系统信息操作：os 模块提供了获取操作系统信息、CPU 数量、内存使用情况等函数，可以用于获取系统信息和优化程序性能。
Shell 命令操作：os 模块提供了执行 Shell 命令的函数，可以用于执行 Shell 命令和脚本。
文件系统监控：os 模块提供了监控文件系